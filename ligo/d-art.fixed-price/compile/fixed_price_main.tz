{ parameter
    (or (or (or (or %admin
                   (or (or (address %addDropSeller) (bool %contractWillUpdate))
                       (or (address %removeDropSeller) (pair %updateFee (address %address) (nat %percent))))
                   (key %updatePublicKey))
                (pair %buyDroppedToken
                   (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                   (pair (address %seller)
                         (pair %authorization_signature (bytes %message) (signature %signed)))))
            (or (pair %buyFixedPriceToken
                   (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                   (pair (address %seller)
                         (pair %authorization_signature (bytes %message) (signature %signed))))
                (pair %configureDrop
                   (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                   (pair (address %seller)
                         (pair (mutez %price)
                               (pair (map %allowlist address unit)
                                     (pair (timestamp %drop_date)
                                           (pair (nat %sale_duration)
                                                 (pair (bool %registration)
                                                       (pair %authorization_signature (bytes %message) (signature %signed)))))))))))
        (or (or (pair %configureSale
                   (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                   (pair (address %seller) (pair (mutez %price) (map %allowlist address unit))))
                (pair %deleteSale
                   (pair %fa2_token_identifier (nat %id) (address %address))
                   (address %seller)))
            (or (pair %registerToDrop
                   (pair %fa2_token_identifier (nat %id) (address %address))
                   (pair (address %seller)
                         (pair %authorization_signature (bytes %message) (signature %signed))))
                (pair %updateSale
                   (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                   (pair (address %seller) (pair (mutez %price) (map %allowlist address unit))))))) ;
  storage
    (pair (pair %admin
             (pair (address %admin_address) (bool %contract_will_update))
             (pair (key %pb_key)
                   (big_map %signed_message_used (pair (bytes %message) (signature %signed)) unit)))
          (pair (big_map %for_sale
                   (pair (pair (nat %id) (address %address)) address)
                   (pair (mutez %price) (pair (nat %token_amount) (map %allowlist address unit))))
                (pair (big_map %authorized_drops_seller address unit)
                      (pair (big_map %drops
                               (pair (pair (nat %id) (address %address)) address)
                               (pair (mutez %price)
                                     (pair (nat %token_amount)
                                           (pair (bool %registration)
                                                 (pair (map %registration_list address unit)
                                                       (pair (map %allowlist address unit)
                                                             (pair (timestamp %drop_date) (nat %sale_duration))))))))
                            (pair (big_map %fa2_dropped (pair (nat %id) (address %address)) unit)
                                  (pair %fee (address %address) (nat %percent))))))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair nat mutez)
           mutez
           { UNPAIR ;
             PUSH nat 100 ;
             SWAP ;
             DIG 2 ;
             MUL ;
             EDIV ;
             IF_NONE
               { PUSH string "DIVISION_BY_ZERO" ; FAILWITH }
               { UNPAIR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 COMPARE ;
                 GT ;
                 IF { PUSH mutez 1 ; ADD } {} } } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE
               { PUSH string "Return address does not resolve to contract" ; FAILWITH }
               {} } ;
         LAMBDA
           (pair (pair (pair nat (pair address nat)) address) address)
           operation
           { UNPAIR ;
             UNPAIR ;
             DUP ;
             GET 3 ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %destinations (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DIG 4 ;
             NIL (pair address (pair nat nat)) ;
             DIG 6 ;
             DUP 7 ;
             CAR ;
             DIG 7 ;
             GET 4 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             CONS ;
             SWAP ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (pair bytes signature)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                 (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                       (pair (big_map address unit)
                             (pair (big_map
                                      (pair (pair nat address) address)
                                      (pair mutez
                                            (pair nat
                                                  (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                   (pair (big_map (pair nat address) unit) (pair address nat))))))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 3 ;
             CAR ;
             CDR ;
             CDR ;
             UNIT ;
             DIG 4 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             UPDATE 1 } ;
         LAMBDA
           (pair (pair bytes signature)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           unit
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CHECK_SIGNATURE ;
             NOT ;
             DUG 2 ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             MEM ;
             OR ;
             IF { PUSH string "UNAUTHORIZED_USER" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           (pair mutez (pair nat (map address unit)))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 3 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_IN_SALE" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           (pair mutez
                 (pair nat
                       (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat))))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 7 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_IN_DROP" ; FAILWITH } {} } ;
         DIG 6 ;
         DIG 6 ;
         DUP 7 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda (pair (pair (pair nat (pair address nat)) address) address) operation)
                       (pair (lambda address (contract unit)) (lambda (pair nat mutez) mutez)))
                 (pair (pair (pair (pair nat (pair address nat)) (pair address (pair bytes signature))) mutez)
                       (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                             (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                                   (pair (big_map address unit)
                                         (pair (big_map
                                                  (pair (pair nat address) address)
                                                  (pair mutez
                                                        (pair nat
                                                              (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                               (pair (big_map (pair nat address) unit) (pair address nat))))))))
           (list operation)
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             DUP ;
             GET 3 ;
             DUP 6 ;
             SWAP ;
             EXEC ;
             DUP 4 ;
             GET 10 ;
             CAR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             CAR ;
             GET 3 ;
             CONTRACT %minter_royalties (pair (nat %token_id) (mutez %fee)) ;
             IF_NONE { PUSH string "Invalide FA2 Address" ; FAILWITH } {} ;
             DUP 5 ;
             DIG 6 ;
             GET 10 ;
             CDR ;
             PAIR ;
             DUP 8 ;
             SWAP ;
             EXEC ;
             DUP 6 ;
             PUSH int 10 ;
             ABS ;
             PAIR ;
             DIG 8 ;
             SWAP ;
             EXEC ;
             NIL operation ;
             SENDER ;
             DUP 8 ;
             GET 3 ;
             DUP 9 ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 9 ;
             SWAP ;
             EXEC ;
             CONS ;
             DIG 5 ;
             DUP 4 ;
             DIG 8 ;
             SUB ;
             UNIT ;
             TRANSFER_TOKENS ;
             DIG 5 ;
             DIG 4 ;
             UNIT ;
             TRANSFER_TOKENS ;
             DIG 4 ;
             DUP 5 ;
             DIG 6 ;
             CAR ;
             CAR ;
             DIG 6 ;
             SWAP ;
             PAIR ;
             TRANSFER_TOKENS ;
             DIG 3 ;
             DIG 3 ;
             CONS ;
             DIG 2 ;
             CONS ;
             SWAP ;
             CONS } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             EDIV ;
             IF_NONE { PUSH string "DIVISION_BY_ZERO" ; FAILWITH } { CAR } } ;
         LAMBDA
           (pair (pair nat (pair address nat)) mutez)
           unit
           { UNPAIR ;
             PUSH mutez 0 ;
             DIG 2 ;
             COMPARE ;
             LE ;
             IF { DROP ; PUSH string "PRICE_SHOULD_BE_GREATER_THAN_0" ; FAILWITH }
                { PUSH nat 0 ;
                  SWAP ;
                  GET 4 ;
                  COMPARE ;
                  LE ;
                  IF { PUSH string "AMOUNT_OF_TOKEN_SHOULD_BE_GREATER_THAN_0" ; FAILWITH }
                     { UNIT } } } ;
         LAMBDA
           (pair (pair nat address)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           unit
           { UNPAIR ;
             SWAP ;
             GET 3 ;
             SENDER ;
             DIG 2 ;
             PAIR ;
             MEM ;
             IF { UNIT } { PUSH string "FA2_NOT_FOR_SALE" ; FAILWITH } } ;
         LAMBDA
           (pair (pair nat (pair address nat)) (map address unit))
           unit
           { UNPAIR ;
             GET 4 ;
             SWAP ;
             SIZE ;
             COMPARE ;
             GT ;
             IF { PUSH string "ALLOWLIST_CAN_T_BE_BIGGER_THAN_AMOUNT_OF_TOKEN" ; FAILWITH }
                { UNIT } } ;
         LAMBDA
           (pair nat (pair (pair nat (pair address nat)) (pair address (pair bytes signature))))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             GET 4 ;
             SWAP ;
             COMPARE ;
             LT ;
             IF { PUSH string "TOKEN_AMOUNT_TO_HIGH" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address unit))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           bool
           { UNPAIR ; SWAP ; GET 5 ; SWAP ; MEM } ;
         DIG 13 ;
         UNPAIR ;
         IF_LEFT
           { DIG 5 ;
             DIG 6 ;
             DROP 2 ;
             IF_LEFT
               { DIG 4 ;
                 DIG 8 ;
                 DIG 11 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 8 ;
                     DROP 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             IF_LEFT
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 IF { SWAP ;
                                      DUP ;
                                      GET 5 ;
                                      UNIT ;
                                      DIG 3 ;
                                      SWAP ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      UPDATE 5 ;
                                      NIL operation ;
                                      PAIR }
                                    { DROP 2 ; PUSH string "ALREADY_SELLER" ; FAILWITH } }
                               { DIG 2 ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 DIG 3 ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 UPDATE 1 ;
                                 NIL operation ;
                                 PAIR } }
                           { IF_LEFT
                               { DIG 3 ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 IF { SWAP ;
                                      DUP ;
                                      GET 5 ;
                                      DIG 2 ;
                                      NONE unit ;
                                      SWAP ;
                                      UPDATE ;
                                      UPDATE 5 ;
                                      NIL operation ;
                                      PAIR }
                                    { DROP 2 ; PUSH string "SELLER_NOT_FOUND" ; FAILWITH } }
                               { DIG 2 ;
                                 DROP ;
                                 PUSH string "Percentage must be between 0 and 100" ;
                                 PUSH nat 100 ;
                                 DUP 3 ;
                                 CDR ;
                                 COMPARE ;
                                 GT ;
                                 PUSH nat 0 ;
                                 DUP 4 ;
                                 CDR ;
                                 COMPARE ;
                                 LT ;
                                 OR ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 UPDATE 10 ;
                                 NIL operation ;
                                 PAIR } } }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         EMPTY_BIG_MAP (pair bytes signature) unit ;
                         DIG 2 ;
                         DUP ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         UPDATE 1 ;
                         DIG 3 ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         UPDATE 1 ;
                         CAR ;
                         DIG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     PUSH string "Seller can not buy the token" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     DUP 3 ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     GET 11 ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "DROP_DATE_NOT_MET" ; FAILWITH } {} ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     GET 5 ;
                     IF { DUP ;
                          GET 12 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 11 ;
                          NOW ;
                          SUB ;
                          ABS ;
                          COMPARE ;
                          GT ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 7 ;
                          SENDER ;
                          MEM ;
                          OR ;
                          IF { UNIT }
                             { PUSH string "SENDER_NOT_AUTHORIZE_TO_PARTICIPATE_TO_THE_DROP" ; FAILWITH } }
                        { DUP ;
                          GET 9 ;
                          SENDER ;
                          MEM ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          GET 9 ;
                          SIZE ;
                          COMPARE ;
                          GT ;
                          AND ;
                          PUSH nat 0 ;
                          DUP 3 ;
                          GET 9 ;
                          SIZE ;
                          COMPARE ;
                          EQ ;
                          OR ;
                          IF { UNIT }
                             { PUSH string "SENDER_NOT_AUTHORIZE_TO_PARTICIPATE_TO_THE_DROP" ; FAILWITH } } ;
                     DROP ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     GET 9 ;
                     SIZE ;
                     DIG 2 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     GET 3 ;
                     PAIR ;
                     DUP 8 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF {} { PUSH string "TOKEN_AMOUNT_TO_HIGH" ; FAILWITH } ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     GET 7 ;
                     SIZE ;
                     DIG 2 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     GET 3 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF {} { PUSH string "TOKEN_AMOUNT_TO_HIGH" ; FAILWITH } ;
                     DUP ;
                     DUP 4 ;
                     CAR ;
                     GET 4 ;
                     DIG 2 ;
                     GET 3 ;
                     SUB ;
                     ABS ;
                     UPDATE 3 ;
                     DUP 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DUP 5 ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DUP 5 ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 2 ;
                          DROP ;
                          DIG 4 ;
                          GET 7 ;
                          DUP 5 ;
                          GET 3 ;
                          DIG 4 ;
                          PAIR ;
                          NONE (pair mutez
                                     (pair nat
                                           (pair bool (pair (map address unit) (pair (map address unit) (pair timestamp nat)))))) ;
                          SWAP ;
                          UPDATE }
                        { DIG 5 ; GET 7 ; DIG 3 ; SOME ; DUP 6 ; GET 3 ; DIG 5 ; PAIR ; UPDATE } ;
                     UPDATE 7 ;
                     DIG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DIG 7 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 9 ;
                     DROP 2 ;
                     PUSH string "Seller can not buy the token" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     DUP 3 ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     GET 4 ;
                     SIZE ;
                     DIG 2 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     GET 3 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF {} { PUSH string "TOKEN_AMOUNT_TO_HIGH" ; FAILWITH } ;
                     DUP ;
                     GET 4 ;
                     SENDER ;
                     MEM ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     GET 4 ;
                     SIZE ;
                     COMPARE ;
                     GT ;
                     AND ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     GET 4 ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     OR ;
                     IF {} { PUSH string "SENDER_NOT_AUTHORIZE_TO_BUY" ; FAILWITH } ;
                     DIG 3 ;
                     DUP 4 ;
                     GET 4 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DUP 6 ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 6 ;
                     CAR ;
                     GET 4 ;
                     DIG 3 ;
                     GET 3 ;
                     SUB ;
                     ABS ;
                     UPDATE 3 ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ;
                          SWAP ;
                          DUP ;
                          GET 3 ;
                          DIG 4 ;
                          GET 3 ;
                          DIG 4 ;
                          PAIR ;
                          NONE (pair mutez (pair nat (map address unit))) ;
                          SWAP ;
                          UPDATE ;
                          UPDATE 3 ;
                          SWAP ;
                          PAIR }
                        { DIG 2 ;
                          DUP ;
                          GET 3 ;
                          DIG 2 ;
                          SOME ;
                          DIG 5 ;
                          GET 3 ;
                          DIG 5 ;
                          PAIR ;
                          UPDATE ;
                          UPDATE 3 ;
                          SWAP ;
                          PAIR } }
                   { DIG 2 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 4 ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 8 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can create a drop" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 14 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 9 ;
                     PUSH int 172800 ;
                     NOW ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LT ;
                     IF { DROP ; PUSH string "DROP_DATE_MUST_BE_AT_LEAST_IN_TWO_DAYS" ; FAILWITH }
                        { PUSH int 1209600 ;
                          NOW ;
                          ADD ;
                          SWAP ;
                          COMPARE ;
                          GT ;
                          IF { PUSH string "DROP_DATE_MUST_BE_IN_MAXIMUM_TWO_WEEKS" ; FAILWITH } {} } ;
                     PUSH nat 86400 ;
                     DUP 3 ;
                     GET 11 ;
                     COMPARE ;
                     LE ;
                     IF { PUSH string "DURATION_OF_THE_SALE_MUST_BE_SUPERIOR_OR_EQUAL_AT_ONE_DAY" ;
                          FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 13 ;
                     DUP 3 ;
                     GET 7 ;
                     PUSH nat 0 ;
                     SWAP ;
                     SIZE ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string
                               "YOU_CAN_NOT_CONFIGURE_A_REGISTRATION_DROP_WITH_AN_ALLOWLIST_IT_SHOULD_BE_ONE_OR_THE_OTHER" ;
                          FAILWITH }
                        {} ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     GET 9 ;
                     SWAP ;
                     MEM ;
                     IF {} { PUSH string "FA2_TOKEN_ALREADY_BEEN_DROPPED" ; FAILWITH } ;
                     DUP 3 ;
                     GET 5 ;
                     SENDER ;
                     MEM ;
                     IF {} { PUSH string "SENDER_IS_NOT_AUTHORZED_DROP_SELLER" ; FAILWITH } ;
                     SENDER ;
                     SELF_ADDRESS ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 3 ;
                     DUP ;
                     GET 7 ;
                     DUP 5 ;
                     GET 5 ;
                     DUP 6 ;
                     CAR ;
                     GET 4 ;
                     DUP 7 ;
                     GET 13 ;
                     EMPTY_MAP address unit ;
                     DUP 9 ;
                     GET 7 ;
                     DUP 10 ;
                     GET 9 ;
                     DUP 11 ;
                     GET 11 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP 6 ;
                     GET 3 ;
                     DIG 5 ;
                     PAIR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 7 ;
                     DIG 2 ;
                     GET 14 ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 7 ;
             DIG 8 ;
             DROP 4 ;
             IF_LEFT
               { DIG 5 ;
                 DIG 7 ;
                 DIG 8 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 3 ;
                     DIG 5 ;
                     DROP 2 ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only owner can create a sale" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 3 ;
                     DUP 3 ;
                     PAIR ;
                     MEM ;
                     IF { DROP 3 ; PUSH string "TOKEN_ALREADY_FOR_SALE" ; FAILWITH }
                        { DIG 2 ;
                          GET 7 ;
                          DUG 2 ;
                          PAIR ;
                          MEM ;
                          IF { PUSH string "TOKEN_ALREADY_IN_DROP" ; FAILWITH } {} } ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SELF_ADDRESS ;
                     SENDER ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DUP 4 ;
                     GET 5 ;
                     DUP 5 ;
                     CAR ;
                     GET 4 ;
                     DUP 6 ;
                     GET 6 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP 5 ;
                     GET 3 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     DIG 6 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DIG 4 ;
                     DROP 2 ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can remove the token from sale" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SENDER ;
                     SELF_ADDRESS ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DUP 4 ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     PAIR ;
                     NONE (pair mutez (pair nat (map address unit))) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { DIG 6 ;
                 DIG 9 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Seller can not register for the drop" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH string "DROP_DOES_NOT_EXIST" ; FAILWITH }
                       { GET 7 ;
                         SENDER ;
                         GET ;
                         IF_NONE {} { DROP ; PUSH string "SENDER_ALREADY_REGISTERED" ; FAILWITH } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH string "DROP_DOES_NOT_EXIST" ; FAILWITH }
                       { PUSH int 1200 ;
                         SWAP ;
                         GET 11 ;
                         SUB ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH string "REGISTRATON_IS_CLOSED_FOR_THIS_DROP" ; FAILWITH } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     GET 7 ;
                     SIZE ;
                     SWAP ;
                     GET 3 ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "REGISTRATION_IS_SOLD_OUT" ; FAILWITH } ;
                     DUP ;
                     GET 7 ;
                     UNIT ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DIG 3 ;
                     DUP ;
                     GET 7 ;
                     DIG 3 ;
                     DIG 3 ;
                     UPDATE 7 ;
                     SOME ;
                     DUP 4 ;
                     GET 3 ;
                     DUP 5 ;
                     CAR ;
                     PAIR ;
                     UPDATE ;
                     UPDATE 7 ;
                     SWAP ;
                     GET 4 ;
                     PAIR ;
                     EXEC ;
                     NIL operation ;
                     PAIR }
                   { DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 3 ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can edit the token sale" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DUP 4 ;
                     GET 5 ;
                     DUP 5 ;
                     CAR ;
                     GET 4 ;
                     DUP 6 ;
                     GET 6 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     DIG 4 ;
                     GET 3 ;
                     DIG 4 ;
                     PAIR ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     PAIR } } } } }

