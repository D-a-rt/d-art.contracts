{ parameter
    (or (or (or (or %admin
                   (or (or (address %addDropSeller) (bool %contractWillUpdate))
                       (or (address %removeDropSeller) (pair %updateFee (address %address) (nat %percent))))
                   (key %updatePublicKey))
                (pair %buyDroppedToken
                   (pair %fa2_token (nat %id) (address %address))
                   (address %seller)
                   (pair %authorization_signature (bytes %message) (signature %signed))))
            (or (pair %buyFixedPriceToken
                   (pair %fa2_token (nat %id) (address %address))
                   (address %seller)
                   (pair %authorization_signature (bytes %message) (signature %signed)))
                (pair %createDrops
                   (pair %authorization_signature (bytes %message) (signature %signed))
                   (list %drop_infos
                      (pair (pair %fa2_token (nat %id) (address %address))
                            (mutez %price)
                            (timestamp %drop_date)))
                   (address %seller))))
        (or (or (pair %createSales
                   (list %sale_infos
                      (pair (option %buyer address)
                            (mutez %price)
                            (pair %fa2_token (nat %id) (address %address))))
                   (address %seller)
                   (pair %authorization_signature (bytes %message) (signature %signed)))
                (pair %revokeDrops
                   (list %fa2_tokens (pair (nat %id) (address %address)))
                   (address %seller)))
            (or (pair %revokeSales
                   (list %fa2_tokens (pair (nat %id) (address %address)))
                   (address %seller))
                (pair %updateSales
                   (list %sale_infos
                      (pair (option %buyer address)
                            (mutez %price)
                            (pair %fa2_token (nat %id) (address %address))))
                   (address %seller)
                   (pair %authorization_signature (bytes %message) (signature %signed)))))) ;
  storage
    (pair (pair %admin
             (pair (address %address) (bool %contract_will_update))
             (pair (key %pb_key)
                   (big_map %signed_message_used (pair (bytes %message) (signature %signed)) unit)))
          (big_map %for_sale
             (pair (pair (nat %id) (address %address)) address)
             (pair (mutez %price) (option %buyer address)))
          (big_map %authorized_drops_seller address unit)
          (big_map %drops
             (pair (pair (nat %id) (address %address)) address)
             (pair (mutez %price) (timestamp %drop_date)))
          (big_map %fa2_dropped (pair (nat %id) (address %address)) unit)
          (pair %fee (address %address) (nat %percent))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair mutez nat)
           mutez
           { UNPAIR ;
             EDIV ;
             IF_NONE
               { PUSH string "DIVISION_BY_ZERO" ; FAILWITH }
               { UNPAIR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 COMPARE ;
                 GT ;
                 IF { PUSH mutez 1 ; ADD } {} } } ;
         LAMBDA
           (pair mutez mutez)
           mutez
           { UNPAIR ; SUB_MUTEZ ; IF_NONE { PUSH mutez 0 } {} } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE
               { PUSH string "Return address does not resolve to contract" ; FAILWITH }
               {} } ;
         LAMBDA
           (pair (pair bytes signature)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (big_map (pair (pair nat address) address) (pair mutez (option address)))
                       (big_map address unit)
                       (big_map (pair (pair nat address) address) (pair mutez timestamp))
                       (big_map (pair nat address) unit)
                       (pair address nat)))
           unit
           { UNPAIR ;
             DUP ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             CHECK_SIGNATURE ;
             NOT ;
             DIG 2 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             MEM ;
             OR ;
             IF { PUSH string "UNAUTHORIZED_USER" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (big_map (pair (pair nat address) address) (pair mutez (option address)))
                       (big_map address unit)
                       (big_map (pair (pair nat address) address) (pair mutez timestamp))
                       (big_map (pair nat address) unit)
                       (pair address nat)))
           (pair mutez timestamp)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 7 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_IN_DROP" ; FAILWITH } {} } ;
         DIG 4 ;
         DIG 4 ;
         DIG 4 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda address (contract unit))
                       (pair (lambda (pair mutez mutez) mutez) (lambda (pair mutez nat) mutez)))
                 (pair (pair (pair (pair nat address) address (pair bytes signature)) mutez)
                       (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                             (big_map (pair (pair nat address) address) (pair mutez (option address)))
                             (big_map address unit)
                             (big_map (pair (pair nat address) address) (pair mutez timestamp))
                             (big_map (pair nat address) unit)
                             (pair address nat))))
           (list operation)
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             DUP 3 ;
             GET 10 ;
             CAR ;
             DUP 5 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             GET 10 ;
             CDR ;
             SOME ;
             IF_NONE
               { PUSH mutez 0 }
               { PUSH nat 1000 ; SWAP ; DUP 5 ; MUL ; PAIR ; DUP 7 ; SWAP ; EXEC } ;
             DUP 3 ;
             CAR ;
             UNPAIR ;
             VIEW "minter_royalties" (pair (address %address) (nat %percentage)) ;
             IF_NONE
               { DIG 6 ; DROP ; NIL operation ; PUSH mutez 0 ; PAIR }
               { DUP ;
                 CDR ;
                 SOME ;
                 IF_NONE
                   { DIG 7 ; DROP ; PUSH mutez 0 }
                   { PUSH nat 100 ; SWAP ; DUP 7 ; MUL ; PAIR ; DIG 8 ; SWAP ; EXEC } ;
                 SWAP ;
                 CAR ;
                 DUP 7 ;
                 SWAP ;
                 EXEC ;
                 NIL operation ;
                 SWAP ;
                 DUP 3 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 PAIR } ;
             UNPAIR ;
             DUP 5 ;
             GET 3 ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP 4 ;
             DIG 7 ;
             PAIR ;
             DUP 8 ;
             SWAP ;
             EXEC ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DIG 4 ;
             DIG 4 ;
             UNIT ;
             TRANSFER_TOKENS ;
             DUG 2 ;
             UNIT ;
             TRANSFER_TOKENS ;
             DUP 4 ;
             CAR ;
             CDR ;
             NIL (pair address nat nat) ;
             PUSH nat 1 ;
             DUP 7 ;
             CAR ;
             CAR ;
             SENDER ;
             PAIR 3 ;
             CONS ;
             DIG 5 ;
             GET 3 ;
             PAIR ;
             SWAP ;
             CONTRACT %transfer
               (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address nat nat))) ;
             DIG 3 ;
             CONS ;
             TRANSFER_TOKENS ;
             DIG 3 ;
             DIG 2 ;
             CONS ;
             SWAP ;
             CONS ;
             SWAP ;
             CONS } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair address
                 (pair (pair (pair address bool) (pair key (big_map (pair bytes signature) unit)))
                       (big_map (pair (pair nat address) address) (pair mutez (option address)))
                       (big_map address unit)
                       (big_map (pair (pair nat address) address) (pair mutez timestamp))
                       (big_map (pair nat address) unit)
                       (pair address nat)))
           bool
           { UNPAIR ; SWAP ; GET 5 ; SWAP ; MEM } ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             IF_LEFT
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 IF { DROP 2 ; PUSH string "ALREADY_SELLER" ; FAILWITH }
                                    { SWAP ;
                                      DUP ;
                                      GET 5 ;
                                      UNIT ;
                                      DIG 3 ;
                                      SWAP ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      UPDATE 5 ;
                                      NIL operation ;
                                      PAIR } }
                               { DIG 2 ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 DIG 3 ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 UPDATE 1 ;
                                 NIL operation ;
                                 PAIR } }
                           { IF_LEFT
                               { DIG 3 ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 IF { SWAP ;
                                      DUP ;
                                      GET 5 ;
                                      DIG 2 ;
                                      NONE unit ;
                                      SWAP ;
                                      UPDATE ;
                                      UPDATE 5 ;
                                      NIL operation ;
                                      PAIR }
                                    { DROP 2 ; PUSH string "SELLER_NOT_FOUND" ; FAILWITH } }
                               { DIG 2 ;
                                 DROP ;
                                 PUSH string "PERCENTAGE_MUST_BE_MAXIUM_50" ;
                                 PUSH nat 50 ;
                                 DUP 3 ;
                                 CDR ;
                                 COMPARE ;
                                 LE ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 UPDATE 10 ;
                                 NIL operation ;
                                 PAIR } } }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     PUSH string "Seller can not buy the token" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "DROP_DATE_NOT_MET" ; FAILWITH } {} ;
                     PUSH string "Wrong price specified" ;
                     AMOUNT ;
                     DUP 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 3 ;
                     SWAP ;
                     CAR ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUP ;
                     DUG 4 ;
                     GET 7 ;
                     DUP 4 ;
                     GET 3 ;
                     DUP 5 ;
                     CAR ;
                     PAIR ;
                     NONE (pair mutez timestamp) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 7 ;
                     DIG 3 ;
                     DUP ;
                     DUP ;
                     DUG 5 ;
                     GET 7 ;
                     DUP 5 ;
                     GET 3 ;
                     DUP 6 ;
                     CAR ;
                     PAIR ;
                     NONE (pair mutez timestamp) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 7 ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     DIG 5 ;
                     GET 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     UPDATE 1 ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DIG 4 ;
                 DROP 2 ;
                 IF_LEFT
                   { PUSH string "Seller can not buy the token" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE { PUSH string "TOKEN_IS_NOT_IN_SALE" ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     IF_NONE
                       { UNIT }
                       { SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF { UNIT } { PUSH string "SENDER_NOT_AUTHORIZE_TO_BUY" ; FAILWITH } } ;
                     DROP ;
                     PUSH string "Wrong price specified" ;
                     AMOUNT ;
                     DUP 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 3 ;
                     SWAP ;
                     CAR ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUP ;
                     DUG 4 ;
                     GET 3 ;
                     DUP 4 ;
                     GET 3 ;
                     DUP 5 ;
                     CAR ;
                     PAIR ;
                     NONE (pair mutez (option address)) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     DIG 3 ;
                     DUP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     DUP 5 ;
                     GET 3 ;
                     DUP 6 ;
                     CAR ;
                     PAIR ;
                     NONE (pair mutez (option address)) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     DIG 5 ;
                     GET 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     UPDATE 1 ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string
                          "WILL_BE_DEPRECATED" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     NOT ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can create a drop" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Not authorized drop seller" ;
                     SENDER ;
                     DUP 4 ;
                     GET 5 ;
                     SWAP ;
                     MEM ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     ITER { SWAP ;
                            DROP ;
                            PUSH string "Price should be greater than 0.1 tez" ;
                            PUSH mutez 10000 ;
                            DUP 3 ;
                            GET 3 ;
                            COMPARE ;
                            GT ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            GET 4 ;
                            PUSH int 120 ;
                            NOW ;
                            ADD ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            COMPARE ;
                            LT ;
                            IF { DROP ; PUSH string "DROP_DATE_MUST_BE_AT_LEAST_IN_A_DAY" ; FAILWITH }
                               { PUSH int 2419200 ;
                                 NOW ;
                                 ADD ;
                                 SWAP ;
                                 COMPARE ;
                                 GT ;
                                 IF { PUSH string "DROP_DATE_MUST_BE_IN_MAXIMUM_ONE_MONTH" ; FAILWITH } {} } ;
                            PUSH string "Token has already been dropped" ;
                            DUP 4 ;
                            GET 7 ;
                            SENDER ;
                            DUP 4 ;
                            CAR ;
                            PAIR ;
                            MEM ;
                            NOT ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            PUSH string "Token has already been dropped" ;
                            DUP 4 ;
                            GET 9 ;
                            DUP 3 ;
                            CAR ;
                            MEM ;
                            NOT ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            PAIR ;
                            DIG 3 ;
                            DUP ;
                            DUP ;
                            DUG 5 ;
                            GET 9 ;
                            UNIT ;
                            DUP 5 ;
                            CAR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 9 ;
                            DUP 5 ;
                            GET 7 ;
                            DUP 3 ;
                            DUP 6 ;
                            GET 4 ;
                            DUP 6 ;
                            CAR ;
                            PAIR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 7 ;
                            DIG 4 ;
                            DUP ;
                            DUP ;
                            DUG 6 ;
                            GET 9 ;
                            UNIT ;
                            DUP 6 ;
                            CAR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 9 ;
                            DUP 6 ;
                            GET 7 ;
                            DIG 3 ;
                            DUP 6 ;
                            GET 4 ;
                            DIG 5 ;
                            CAR ;
                            PAIR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 7 ;
                            CAR ;
                            DUP 4 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            UNIT ;
                            DUP 5 ;
                            CAR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            SWAP ;
                            CAR ;
                            PAIR ;
                            UPDATE 1 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     NIL operation ;
                     PAIR } } }
           { DIG 2 ;
             DIG 3 ;
             DROP 2 ;
             IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string
                          "WILL_BE_DEPRECATED" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     NOT ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Seller must be sender" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DROP ;
                            PUSH string "Price should be at least 0.1tez" ;
                            PUSH mutez 10000 ;
                            DUP 3 ;
                            GET 3 ;
                            COMPARE ;
                            GE ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            PAIR ;
                            PUSH string "Token already for sale, only update or revoke are authorized" ;
                            DUP 5 ;
                            GET 3 ;
                            SENDER ;
                            DUP 5 ;
                            GET 4 ;
                            PAIR ;
                            MEM ;
                            NOT ;
                            PAIR ;
                            DUP 6 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DIG 3 ;
                            DUP ;
                            DUP ;
                            DUG 5 ;
                            GET 3 ;
                            DUP 3 ;
                            DUP 6 ;
                            GET 3 ;
                            DUP 6 ;
                            GET 4 ;
                            CDR ;
                            DUP 7 ;
                            GET 4 ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 3 ;
                            DIG 4 ;
                            DUP ;
                            DUP ;
                            DUG 6 ;
                            GET 3 ;
                            DIG 3 ;
                            DUP 6 ;
                            GET 3 ;
                            DUP 6 ;
                            GET 4 ;
                            CDR ;
                            DIG 6 ;
                            GET 4 ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 3 ;
                            CAR ;
                            DUP 4 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            UNIT ;
                            DUP 5 ;
                            GET 4 ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            SWAP ;
                            CAR ;
                            PAIR ;
                            UPDATE 1 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     NIL operation ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can revoke the tokens from a drop" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DROP ;
                            DUP 3 ;
                            DUP 3 ;
                            CDR ;
                            DUP 3 ;
                            PAIR ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            PUSH string "You can only revoke a drop after the drop date" ;
                            SWAP ;
                            CDR ;
                            NOW ;
                            COMPARE ;
                            GT ;
                            PAIR ;
                            DUP 6 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DIG 2 ;
                            DUP ;
                            DUP ;
                            DUG 4 ;
                            GET 7 ;
                            DUP 4 ;
                            CDR ;
                            DIG 3 ;
                            PAIR ;
                            NONE (pair mutez timestamp) ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 7 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 4 ;
                     NIL operation ;
                     PAIR } }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 IF_LEFT
                   { PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can remove the token from sale" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DROP ;
                            PUSH string "Token is not for sale" ;
                            DUP 4 ;
                            GET 3 ;
                            SENDER ;
                            DUP 4 ;
                            PAIR ;
                            MEM ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DIG 2 ;
                            DUP ;
                            DUP ;
                            DUG 4 ;
                            GET 3 ;
                            DUP 4 ;
                            CDR ;
                            DIG 3 ;
                            PAIR ;
                            NONE (pair mutez (option address)) ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 3 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     NIL operation ;
                     PAIR }
                   { PUSH string "Amount sent must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Only seller can update the sale" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            DROP ;
                            PUSH string "Price should be greater than 0" ;
                            PUSH mutez 0 ;
                            DUP 3 ;
                            GET 3 ;
                            COMPARE ;
                            GT ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            PUSH string "Token is not for sale" ;
                            DUP 4 ;
                            GET 3 ;
                            SENDER ;
                            DUP 4 ;
                            GET 4 ;
                            PAIR ;
                            MEM ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DIG 2 ;
                            DUP ;
                            DUP ;
                            DUG 4 ;
                            GET 3 ;
                            DUP 3 ;
                            CAR ;
                            DUP 4 ;
                            GET 3 ;
                            PAIR ;
                            SOME ;
                            DUP 5 ;
                            GET 3 ;
                            DIG 4 ;
                            GET 4 ;
                            PAIR ;
                            UPDATE ;
                            UPDATE 3 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     NIL operation ;
                     PAIR } } } } }

