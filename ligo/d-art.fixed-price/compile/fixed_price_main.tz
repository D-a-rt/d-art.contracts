{ parameter
    (or (or (or (or (or %admin
                       (or (or (address %addDropSeller) (bool %contractWillUpdate))
                           (or (address %removeDropSeller) (pair %updateFee (address %address) (nat %percent))))
                       (key %updatePublicKey))
                    (pair %buyDroppedToken
                       (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                       (pair (address %seller)
                             (pair %authorization_signature (bytes %message) (signature %signed)))))
                (or (pair %buyFixedPriceToken
                       (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                       (pair (address %seller)
                             (pair %authorization_signature (bytes %message) (signature %signed))))
                    (pair %claimUtilityToken
                       (pair %fa2_base (nat %id) (address %address))
                       (pair (address %seller)
                             (pair %authorization_signature (bytes %message) (signature %signed))))))
            (or (or (pair %createDrop
                       (pair %registration
                          (option %utility_token (pair (nat %id) (address %address)))
                          (pair (int %priority_duration) (bool %active)))
                       (pair (pair %authorization_signature (bytes %message) (signature %signed))
                             (pair (pair %fa2_token (nat %id) (pair (address %address) (nat %amount)))
                                   (pair (mutez %price) (pair (timestamp %drop_date) (address %seller))))))
                    (pair %createSale
                       (map %allowlist address nat)
                       (pair (mutez %price)
                             (pair (address %seller)
                                   (pair (pair %authorization_signature (bytes %message) (signature %signed))
                                         (pair %fa2_token (nat %id) (pair (address %address) (nat %amount))))))))
                (or (pair %registerToDrop
                       (pair %fa2_base (nat %id) (address %address))
                       (pair (address %seller)
                             (pair %authorization_signature (bytes %message) (signature %signed))))
                    (pair %revokeDrop
                       (pair %fa2_base (nat %id) (address %address))
                       (pair (address %seller)
                             (pair %authorization_signature (bytes %message) (signature %signed)))))))
        (or (pair %revokeSale (pair %fa2_base (nat %id) (address %address)) (address %seller))
            (pair %updateSale
               (map %allowlist address nat)
               (pair (mutez %price)
                     (pair (address %seller)
                           (pair (pair %authorization_signature (bytes %message) (signature %signed))
                                 (pair %fa2_token (nat %id) (pair (address %address) (nat %amount))))))))) ;
  storage
    (pair (pair %admin
             (address %address)
             (pair (key %pb_key)
                   (pair (big_map %signed_message_used (pair (bytes %message) (signature %signed)) unit)
                         (bool %contract_will_update))))
          (pair (big_map %for_sale
                   (pair (pair (nat %id) (address %address)) address)
                   (pair (mutez %price) (pair (nat %token_amount) (map %allowlist address nat))))
                (pair (big_map %authorized_drops_seller address unit)
                      (pair (big_map %drops
                               (pair (pair (nat %id) (address %address)) address)
                               (pair (mutez %price)
                                     (pair (nat %token_amount)
                                           (pair (pair %registration
                                                    (option %utility_token (pair (nat %id) (address %address)))
                                                    (pair (int %priority_duration) (bool %active)))
                                                 (pair (map %registered_buyers address unit)
                                                       (pair (map %drop_owners address unit) (timestamp %drop_date)))))))
                            (pair (big_map %fa2_dropped (pair (nat %id) (address %address)) unit)
                                  (pair %fee (address %address) (nat %percent))))))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair (option nat) mutez)
           mutez
           { UNPAIR ;
             IF_NONE
               { DROP ; PUSH mutez 0 }
               { PUSH nat 100 ;
                 SWAP ;
                 DIG 2 ;
                 MUL ;
                 EDIV ;
                 IF_NONE
                   { PUSH string "DIVISION_BY_ZERO" ; FAILWITH }
                   { UNPAIR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH mutez 1 ; ADD } {} } } } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE
               { PUSH string "Return address does not resolve to contract" ; FAILWITH }
               {} } ;
         LAMBDA
           (pair (pair address (list (pair address (pair nat nat)))) address)
           operation
           { UNPAIR ;
             SWAP ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             DIG 3 ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (pair bytes signature)
                 (pair (pair address (pair key (pair (big_map (pair bytes signature) unit) bool)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address nat))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair (pair (option (pair nat address)) (pair int bool))
                                                              (pair (map address unit) (pair (map address unit) timestamp))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           unit
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 2 ;
             CAR ;
             GET 3 ;
             CHECK_SIGNATURE ;
             NOT ;
             DUG 2 ;
             SWAP ;
             CAR ;
             GET 5 ;
             SWAP ;
             MEM ;
             OR ;
             IF { PUSH string "UNAUTHORIZED_USER" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair address (pair key (pair (big_map (pair bytes signature) unit) bool)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address nat))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair (pair (option (pair nat address)) (pair int bool))
                                                              (pair (map address unit) (pair (map address unit) timestamp))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           (pair mutez (pair nat (map address nat)))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 3 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_IN_SALE" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair address (pair key (pair (big_map (pair bytes signature) unit) bool)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address nat))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair (pair (option (pair nat address)) (pair int bool))
                                                              (pair (map address unit) (pair (map address unit) timestamp))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           (pair mutez
                 (pair nat
                       (pair (pair (option (pair nat address)) (pair int bool))
                             (pair (map address unit) (pair (map address unit) timestamp)))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 7 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_IN_DROP" ; FAILWITH } {} } ;
         DUP 4 ;
         LAMBDA
           (pair (lambda (pair (pair address (list (pair address (pair nat nat)))) address) operation)
                 (pair (pair nat address)
                       (pair mutez
                             (pair nat
                                   (pair (pair (option (pair nat address)) (pair int bool))
                                         (pair (map address unit) (pair (map address unit) timestamp)))))))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             NIL (pair address (pair nat nat)) ;
             DIG 2 ;
             GET 7 ;
             ITER { SWAP ; PUSH nat 1 ; DUP 4 ; CAR ; DIG 3 ; CAR ; PAIR 3 ; CONS } ;
             NIL operation ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             CONS } ;
         SWAP ;
         APPLY ;
         DIG 6 ;
         DIG 6 ;
         DUP 7 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda (pair (pair address (list (pair address (pair nat nat)))) address) operation)
                       (pair (lambda address (contract unit)) (lambda (pair (option nat) mutez) mutez)))
                 (pair (pair (pair (pair nat (pair address nat)) (pair address (pair bytes signature))) mutez)
                       (pair (pair address (pair key (pair (big_map (pair bytes signature) unit) bool)))
                             (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address nat))))
                                   (pair (big_map address unit)
                                         (pair (big_map
                                                  (pair (pair nat address) address)
                                                  (pair mutez
                                                        (pair nat
                                                              (pair (pair (option (pair nat address)) (pair int bool))
                                                                    (pair (map address unit) (pair (map address unit) timestamp))))))
                                               (pair (big_map (pair nat address) unit) (pair address nat))))))))
           (list operation)
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             DUP 3 ;
             GET 10 ;
             CAR ;
             DUP 6 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             DIG 4 ;
             GET 10 ;
             CDR ;
             SOME ;
             PAIR ;
             DUP 7 ;
             SWAP ;
             EXEC ;
             DUP ;
             DUG 2 ;
             UNIT ;
             TRANSFER_TOKENS ;
             DUP 4 ;
             DUP 4 ;
             CAR ;
             DUP ;
             GET 3 ;
             SWAP ;
             CAR ;
             VIEW "minter_royalties" (pair (address %address) (nat %percentage)) ;
             IF_NONE
               { DIG 7 ; DROP 2 ; NIL operation ; PUSH mutez 0 ; PAIR }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 SOME ;
                 PAIR ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 CAR ;
                 DUP 8 ;
                 SWAP ;
                 EXEC ;
                 NIL operation ;
                 SWAP ;
                 DUP 3 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 PAIR } ;
             UNPAIR ;
             DUP 5 ;
             GET 3 ;
             DIG 8 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DIG 4 ;
             DIG 6 ;
             SUB ;
             SUB ;
             UNIT ;
             TRANSFER_TOKENS ;
             DUP 4 ;
             CAR ;
             GET 3 ;
             NIL (pair address (pair nat nat)) ;
             DUP 6 ;
             CAR ;
             GET 4 ;
             DIG 6 ;
             CAR ;
             CAR ;
             SENDER ;
             PAIR 3 ;
             CONS ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUG 2 ;
             CONS ;
             SWAP ;
             CONS ;
             SWAP ;
             CONS } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair address
                 (pair (pair address (pair key (pair (big_map (pair bytes signature) unit) bool)))
                       (pair (big_map (pair (pair nat address) address) (pair mutez (pair nat (map address nat))))
                             (pair (big_map address unit)
                                   (pair (big_map
                                            (pair (pair nat address) address)
                                            (pair mutez
                                                  (pair nat
                                                        (pair (pair (option (pair nat address)) (pair int bool))
                                                              (pair (map address unit) (pair (map address unit) timestamp))))))
                                         (pair (big_map (pair nat address) unit) (pair address nat)))))))
           bool
           { UNPAIR ; SWAP ; GET 5 ; SWAP ; MEM } ;
         DIG 8 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 6 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 7 ;
                         DROP 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                         IF_LEFT
                           { IF_LEFT
                               { DIG 3 ;
                                 DROP ;
                                 IF_LEFT
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     PAIR ;
                                     DIG 3 ;
                                     SWAP ;
                                     EXEC ;
                                     IF { DROP 2 ; PUSH string "ALREADY_SELLER" ; FAILWITH }
                                        { SWAP ;
                                          DUP ;
                                          GET 5 ;
                                          UNIT ;
                                          DIG 3 ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          UPDATE 5 ;
                                          NIL operation ;
                                          PAIR } }
                                   { DIG 2 ;
                                     DROP ;
                                     SWAP ;
                                     DUP ;
                                     CAR ;
                                     DIG 2 ;
                                     UPDATE 6 ;
                                     UPDATE 1 ;
                                     NIL operation ;
                                     PAIR } }
                               { IF_LEFT
                                   { DIG 3 ;
                                     DROP ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     PAIR ;
                                     DIG 3 ;
                                     SWAP ;
                                     EXEC ;
                                     IF { SWAP ;
                                          DUP ;
                                          GET 5 ;
                                          DIG 2 ;
                                          NONE unit ;
                                          SWAP ;
                                          UPDATE ;
                                          UPDATE 5 ;
                                          NIL operation ;
                                          PAIR }
                                        { DROP 2 ; PUSH string "SELLER_NOT_FOUND" ; FAILWITH } }
                                   { DIG 2 ;
                                     DROP ;
                                     PUSH string "Percentage must be between 0 and 100" ;
                                     PUSH nat 100 ;
                                     DUP 3 ;
                                     CDR ;
                                     COMPARE ;
                                     LT ;
                                     PUSH nat 0 ;
                                     DUP 4 ;
                                     CDR ;
                                     COMPARE ;
                                     GT ;
                                     OR ;
                                     PAIR ;
                                     DIG 3 ;
                                     SWAP ;
                                     EXEC ;
                                     DROP ;
                                     UPDATE 10 ;
                                     NIL operation ;
                                     PAIR } } }
                           { DIG 2 ;
                             DIG 3 ;
                             DROP 2 ;
                             EMPTY_BIG_MAP (pair bytes signature) unit ;
                             DIG 2 ;
                             DUP ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             DUP 4 ;
                             UPDATE 3 ;
                             UPDATE 1 ;
                             DIG 3 ;
                             DUP ;
                             CAR ;
                             DIG 4 ;
                             UPDATE 3 ;
                             UPDATE 1 ;
                             CAR ;
                             DIG 2 ;
                             UPDATE 5 ;
                             UPDATE 1 ;
                             NIL operation ;
                             PAIR } }
                       { DIG 2 ;
                         DROP ;
                         PUSH string "Seller can not buy the token" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         PAIR ;
                         DUP 9 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 4 ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "Token amount to high" ;
                         DUP 4 ;
                         CAR ;
                         GET 4 ;
                         DUP 3 ;
                         GET 3 ;
                         COMPARE ;
                         GE ;
                         PAIR ;
                         DUP 9 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 10 ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "DROP_DATE_NOT_MET" ; FAILWITH } {} ;
                         DUP 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         GET 5 ;
                         GET 4 ;
                         IF { DUP ;
                              GET 5 ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 10 ;
                              NOW ;
                              SUB ;
                              COMPARE ;
                              GT ;
                              IF { DROP 2 ; UNIT }
                                 { DUP ;
                                   GET 5 ;
                                   CAR ;
                                   IF_NONE
                                     { DUP ;
                                       GET 9 ;
                                       SENDER ;
                                       MEM ;
                                       NOT ;
                                       SWAP ;
                                       GET 7 ;
                                       SENDER ;
                                       MEM ;
                                       AND ;
                                       IF { PUSH string "NOT_ALLOWED_TO_PURCHASE_MORE_THAN_ONE_TOKEN" ;
                                            PUSH nat 1 ;
                                            DIG 2 ;
                                            CAR ;
                                            GET 4 ;
                                            COMPARE ;
                                            EQ ;
                                            PAIR ;
                                            DUP 9 ;
                                            SWAP ;
                                            EXEC }
                                          { DROP ;
                                            PUSH string "SENDER_NOT_AUTHORIZE_TO_PARTICIPATE_TO_THE_DROP" ;
                                            FAILWITH } }
                                     { DUP ;
                                       CAR ;
                                       SENDER ;
                                       PAIR ;
                                       DIG 2 ;
                                       GET 9 ;
                                       SENDER ;
                                       MEM ;
                                       NOT ;
                                       PUSH nat 0 ;
                                       DIG 3 ;
                                       CDR ;
                                       DIG 3 ;
                                       VIEW "get_balance" nat ;
                                       IF_NONE { PUSH nat 0 } {} ;
                                       COMPARE ;
                                       GT ;
                                       AND ;
                                       IF { PUSH string "NOT_ALLOWED_TO_PURCHASE_MORE_THAN_ONE_TOKEN" ;
                                            PUSH nat 1 ;
                                            DIG 2 ;
                                            CAR ;
                                            GET 4 ;
                                            COMPARE ;
                                            EQ ;
                                            PAIR ;
                                            DUP 9 ;
                                            SWAP ;
                                            EXEC }
                                          { DROP ;
                                            PUSH string "SENDER_NOT_AUTHORIZE_TO_PARTICIPATE_TO_THE_DROP" ;
                                            FAILWITH } } } }
                            { DROP 2 ; UNIT } ;
                         DROP ;
                         PUSH string "Wrong price specified" ;
                         AMOUNT ;
                         DUP 3 ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DIG 8 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUP 4 ;
                         CAR ;
                         GET 4 ;
                         DUP 3 ;
                         GET 3 ;
                         SUB ;
                         ABS ;
                         UPDATE 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         NONE unit ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 7 ;
                         SWAP ;
                         GET 9 ;
                         UNIT ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 9 ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP 4 ;
                              GET 7 ;
                              DUP 4 ;
                              GET 3 ;
                              DIG 3 ;
                              PAIR ;
                              NONE (pair mutez
                                         (pair nat
                                               (pair (pair (option (pair nat address)) (pair int bool))
                                                     (pair (map address unit) (pair (map address unit) timestamp))))) ;
                              SWAP ;
                              UPDATE }
                            { DUP 4 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SOME ;
                              DUP 5 ;
                              GET 3 ;
                              DIG 4 ;
                              PAIR ;
                              UPDATE } ;
                         NOW ;
                         DUP 3 ;
                         GET 10 ;
                         DUP 4 ;
                         GET 5 ;
                         GET 3 ;
                         ADD ;
                         COMPARE ;
                         GT ;
                         DUP 3 ;
                         GET 5 ;
                         GET 4 ;
                         AND ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 5 ;
                              CAR ;
                              IF_NONE
                                { DIG 5 ; DIG 6 ; DROP 2 ; NIL operation }
                                { PUSH nat 0 ;
                                  DUP 4 ;
                                  GET 3 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DIG 7 ; DROP ; DUP 3 ; SWAP ; PAIR ; DIG 6 ; SWAP ; EXEC }
                                     { DIG 6 ;
                                       DROP ;
                                       NIL operation ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       NIL (pair address (pair nat nat)) ;
                                       PUSH nat 1 ;
                                       DIG 4 ;
                                       CAR ;
                                       SELF_ADDRESS ;
                                       PAIR 3 ;
                                       CONS ;
                                       SENDER ;
                                       PAIR ;
                                       PAIR ;
                                       DIG 7 ;
                                       SWAP ;
                                       EXEC ;
                                       CONS } } }
                            { DIG 5 ; DIG 6 ; DROP 2 ; NIL operation } ;
                         DUP 5 ;
                         DIG 3 ;
                         CAR ;
                         DUP 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         ITER { CONS } ;
                         DUP 4 ;
                         DUP 3 ;
                         UPDATE 7 ;
                         DUP 5 ;
                         DIG 3 ;
                         UPDATE 7 ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         GET 5 ;
                         UNIT ;
                         DIG 5 ;
                         GET 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         UPDATE 1 ;
                         SWAP ;
                         PAIR } }
                   { DIG 2 ;
                     DIG 4 ;
                     DROP 2 ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 6 ;
                         DROP 2 ;
                         PUSH string "Seller can not buy the token" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         PAIR ;
                         DUP 7 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 4 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "Token amount to high" ;
                         DUP 4 ;
                         CAR ;
                         GET 4 ;
                         DUP 3 ;
                         GET 3 ;
                         COMPARE ;
                         GE ;
                         PAIR ;
                         DUP 7 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 4 ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SIZE ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; UNIT }
                            { SENDER ;
                              GET ;
                              IF_NONE
                                { DROP ; PUSH string "NOT_AUTHORIZED_BUYER" ; FAILWITH }
                                { PUSH string "Amount specified to high" ;
                                  DIG 2 ;
                                  CAR ;
                                  GET 4 ;
                                  DIG 2 ;
                                  COMPARE ;
                                  GE ;
                                  PAIR ;
                                  DUP 7 ;
                                  SWAP ;
                                  EXEC } } ;
                         DROP ;
                         PUSH string "Wrong price specified" ;
                         AMOUNT ;
                         DUP 5 ;
                         CAR ;
                         GET 4 ;
                         DUP 4 ;
                         CAR ;
                         MUL ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DUP 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP 5 ;
                         CAR ;
                         GET 4 ;
                         DUP 4 ;
                         GET 3 ;
                         SUB ;
                         ABS ;
                         UPDATE 3 ;
                         DIG 2 ;
                         GET 4 ;
                         DUP ;
                         SENDER ;
                         GET ;
                         IF_NONE
                           {}
                           { SWAP ; PUSH nat 1 ; DIG 2 ; SUB ; ABS ; SOME ; SENDER ; UPDATE } ;
                         UPDATE 4 ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP ;
                              DIG 3 ;
                              DUP ;
                              DUP ;
                              DUG 5 ;
                              GET 3 ;
                              DUP 5 ;
                              GET 3 ;
                              DUP 5 ;
                              PAIR ;
                              NONE (pair mutez (pair nat (map address nat))) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 3 ;
                              DIG 4 ;
                              DUP ;
                              DUP ;
                              DUG 6 ;
                              GET 3 ;
                              DUP 6 ;
                              GET 3 ;
                              DIG 5 ;
                              PAIR ;
                              NONE (pair mutez (pair nat (map address nat))) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 3 ;
                              CAR ;
                              DIG 4 ;
                              CAR ;
                              GET 5 ;
                              UNIT ;
                              DIG 5 ;
                              GET 4 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 5 ;
                              UPDATE 1 ;
                              SWAP ;
                              PAIR }
                            { DIG 4 ;
                              DUP ;
                              DUP ;
                              DUG 6 ;
                              GET 3 ;
                              DUP 3 ;
                              SOME ;
                              DUP 7 ;
                              GET 3 ;
                              DUP 7 ;
                              PAIR ;
                              UPDATE ;
                              UPDATE 3 ;
                              DIG 5 ;
                              DUP ;
                              DUP ;
                              DUG 7 ;
                              GET 3 ;
                              DIG 3 ;
                              SOME ;
                              DUP 7 ;
                              GET 3 ;
                              DIG 6 ;
                              PAIR ;
                              UPDATE ;
                              UPDATE 3 ;
                              CAR ;
                              DIG 4 ;
                              CAR ;
                              GET 5 ;
                              UNIT ;
                              DIG 5 ;
                              GET 4 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 5 ;
                              UPDATE 1 ;
                              SWAP ;
                              PAIR } }
                       { DIG 2 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 3 ;
                         PUSH string "Amount sent must be 0mutez" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "Not a registration drop" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 4 ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "You can only claim a utility token after priority duration" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 3 ;
                         DUP 3 ;
                         GET 10 ;
                         ADD ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Unauthorized to claim token" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 9 ;
                         SENDER ;
                         MEM ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 9 ;
                         NONE unit ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 9 ;
                         DUP ;
                         GET 5 ;
                         CAR ;
                         IF_NONE
                           { DIG 3 ;
                             DROP ;
                             PUSH string "No utility token found for this drop" ;
                             FAILWITH }
                           { NIL operation ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             NIL (pair address (pair nat nat)) ;
                             PUSH nat 1 ;
                             DIG 4 ;
                             CAR ;
                             SENDER ;
                             PAIR 3 ;
                             CONS ;
                             SELF_ADDRESS ;
                             PAIR ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             CONS } ;
                         DIG 3 ;
                         DUP ;
                         GET 7 ;
                         DIG 3 ;
                         SOME ;
                         DUP 5 ;
                         GET 3 ;
                         DIG 5 ;
                         CAR ;
                         PAIR ;
                         UPDATE ;
                         UPDATE 7 ;
                         SWAP ;
                         PAIR } } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 6 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     IF_LEFT
                       { PUSH string "Amount sent must be 0mutez" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Only seller can create a drop" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 10 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Price should be greater than 0" ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         GET 7 ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Amount should be greater than 0" ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         GET 5 ;
                         GET 4 ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "This contract is deprecated, you can not create sale on it" ;
                         DUP 3 ;
                         CAR ;
                         GET 6 ;
                         NOT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Not authorized drop seller" ;
                         DUP 3 ;
                         GET 5 ;
                         SENDER ;
                         MEM ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 9 ;
                         PUSH int 120 ;
                         NOW ;
                         ADD ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP ; PUSH string "DROP_DATE_MUST_BE_AT_LEAST_IN_TWO_DAYS" ; FAILWITH }
                            { PUSH int 2419200 ;
                              NOW ;
                              ADD ;
                              SWAP ;
                              COMPARE ;
                              GT ;
                              IF { PUSH string "DROP_DATE_MUST_BE_IN_MAXIMUM_ONE_MONTH" ; FAILWITH } {} } ;
                         PUSH int 86400 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         COMPARE ;
                         LT ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 4 ;
                         AND ;
                         IF { PUSH string "Priority duration must be at least 24h" ; FAILWITH } {} ;
                         DUP ;
                         GET 5 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         PAIR ;
                         PUSH string "Token has already been dropped" ;
                         DUP 4 ;
                         GET 7 ;
                         SENDER ;
                         DUP 4 ;
                         PAIR ;
                         MEM ;
                         NOT ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Token has already been dropped" ;
                         DUP 4 ;
                         GET 9 ;
                         DUP 3 ;
                         MEM ;
                         NOT ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         EMPTY_MAP address unit ;
                         DUP 3 ;
                         GET 9 ;
                         SWAP ;
                         DUP ;
                         DUP 5 ;
                         CAR ;
                         DUP 6 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 7 ;
                         GET 7 ;
                         PAIR 6 ;
                         DUP 3 ;
                         GET 5 ;
                         GET 3 ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 5 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 6 ;
                         GET 5 ;
                         CAR ;
                         SELF_ADDRESS ;
                         PAIR 3 ;
                         CONS ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUP ;
                         DUG 6 ;
                         GET 9 ;
                         UNIT ;
                         DUP 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 9 ;
                         DUP 6 ;
                         GET 7 ;
                         DUP 4 ;
                         DUP 7 ;
                         GET 10 ;
                         DUP 7 ;
                         PAIR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         DIG 5 ;
                         DUP ;
                         DUP ;
                         DUG 7 ;
                         GET 9 ;
                         UNIT ;
                         DUP 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 9 ;
                         DUP 7 ;
                         GET 7 ;
                         DIG 4 ;
                         DUP 7 ;
                         GET 10 ;
                         DIG 6 ;
                         PAIR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         GET 5 ;
                         UNIT ;
                         DIG 5 ;
                         GET 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         UPDATE 1 ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { PUSH string "Amount sent must be should ne greater 0mutez" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Only owner can create a sale" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Price should be greater than 0" ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Amount should be greater than 0" ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         GET 8 ;
                         GET 4 ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string
                              "This contract is or will be deprecated, you can not create sale on it" ;
                         DUP 3 ;
                         CAR ;
                         GET 6 ;
                         NOT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         ITER { CDR ; ADD } ;
                         PUSH string "Buyers amount should be equal to token amount" ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         DIG 3 ;
                         GET 4 ;
                         DIG 3 ;
                         COMPARE ;
                         EQ ;
                         AND ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SENDER ;
                         GET ;
                         IF_NONE {} { DROP ; PUSH string "Seller can not be allowlisted" ; FAILWITH } ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         GET 4 ;
                         DUP 3 ;
                         GET 3 ;
                         PAIR 3 ;
                         PUSH string "Token already for sale, only update or revoke are authorized" ;
                         DUP 4 ;
                         GET 3 ;
                         SENDER ;
                         DUP 5 ;
                         GET 8 ;
                         GET 3 ;
                         DUP 6 ;
                         GET 8 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         MEM ;
                         NOT ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         GET 3 ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 4 ;
                         GET 8 ;
                         GET 4 ;
                         DUP 5 ;
                         GET 8 ;
                         CAR ;
                         SELF_ADDRESS ;
                         PAIR 3 ;
                         CONS ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUP ;
                         DUG 5 ;
                         GET 3 ;
                         DUP 4 ;
                         DUP 6 ;
                         GET 5 ;
                         DUP 7 ;
                         GET 8 ;
                         GET 3 ;
                         DUP 8 ;
                         GET 8 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 3 ;
                         DIG 4 ;
                         DUP ;
                         DUP ;
                         DUG 6 ;
                         GET 3 ;
                         DIG 4 ;
                         DUP 6 ;
                         GET 5 ;
                         DUP 7 ;
                         GET 8 ;
                         GET 3 ;
                         DUP 8 ;
                         GET 8 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 3 ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         GET 5 ;
                         UNIT ;
                         DIG 5 ;
                         GET 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         UPDATE 1 ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { DIG 5 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 4 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Amount sent must be 0mutez" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "Registration is not allowed" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 4 ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Seller can not register for the drop" ;
                         DUP 3 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Utility token drop, no registration possible" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                         NOT ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 3 ;
                         DUP 3 ;
                         SWAP ;
                         GET 7 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         GET ;
                         IF_NONE
                           { PUSH string "DROP_DOES_NOT_EXIST" ; FAILWITH }
                           { GET 10 ;
                             NOW ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "REGISTRATON_IS_CLOSED" ; FAILWITH } } ;
                         PUSH string "Already registered" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         SENDER ;
                         MEM ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 7 ;
                         UNIT ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         UPDATE 7 ;
                         DIG 2 ;
                         DUP ;
                         DUP ;
                         DUG 4 ;
                         GET 7 ;
                         DUP 3 ;
                         SOME ;
                         DUP 5 ;
                         GET 3 ;
                         DUP 6 ;
                         CAR ;
                         PAIR ;
                         UPDATE ;
                         UPDATE 7 ;
                         DIG 3 ;
                         DUP ;
                         DUP ;
                         DUG 5 ;
                         GET 7 ;
                         DIG 3 ;
                         SOME ;
                         DUP 5 ;
                         GET 3 ;
                         DUP 6 ;
                         CAR ;
                         PAIR ;
                         UPDATE ;
                         UPDATE 7 ;
                         CAR ;
                         DIG 3 ;
                         CAR ;
                         GET 5 ;
                         UNIT ;
                         DIG 4 ;
                         GET 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR }
                       { DIG 4 ;
                         DROP ;
                         PUSH string "Amount sent must be 0mutez" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH string "Only seller can revoke the tokens from a drop" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         PAIR ;
                         DUP 6 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         PUSH string "You can only revoke a drop after priority duration" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 3 ;
                         DUP 3 ;
                         GET 10 ;
                         ADD ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         GET 5 ;
                         CAR ;
                         IF_NONE
                           { DIG 3 ;
                             DROP 2 ;
                             PUSH string "No utility token found for this drop" ;
                             FAILWITH }
                           { PUSH nat 0 ;
                             DUP 3 ;
                             GET 9 ;
                             SIZE ;
                             COMPARE ;
                             GT ;
                             IF { PAIR ; DIG 3 ; SWAP ; EXEC }
                                { SWAP ; DIG 4 ; DROP 3 ; NIL operation } } ;
                         DIG 2 ;
                         DUP ;
                         GET 7 ;
                         DUP 4 ;
                         GET 3 ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         NONE (pair mutez
                                    (pair nat
                                          (pair (pair (option (pair nat address)) (pair int bool))
                                                (pair (map address unit) (pair (map address unit) timestamp))))) ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         SWAP ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 7 ;
             DROP 5 ;
             IF_LEFT
               { PUSH string "Amount sent must be 0mutez" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 6 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Only seller can remove the token from sale" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 PAIR 3 ;
                 DUP ;
                 GET 3 ;
                 NIL (pair address (pair nat nat)) ;
                 DUP 3 ;
                 GET 4 ;
                 DIG 3 ;
                 CAR ;
                 SENDER ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 GET 3 ;
                 DUP 4 ;
                 CDR ;
                 DIG 4 ;
                 CAR ;
                 PAIR ;
                 NONE (pair mutez (pair nat (map address nat))) ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 PUSH string "Amount sent must be 0mutez" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Only seller can update the sale" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Price should be greater than 0" ;
                 PUSH mutez 0 ;
                 DUP 3 ;
                 GET 3 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Amount should be greater than 0" ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 GET 8 ;
                 GET 4 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 GET 8 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 8 ;
                 CAR ;
                 PAIR ;
                 PUSH string "Token is not for sale" ;
                 DUP 4 ;
                 GET 3 ;
                 SENDER ;
                 DUP 4 ;
                 PAIR ;
                 MEM ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DIG 2 ;
                 DUP ;
                 GET 3 ;
                 DUP 4 ;
                 CAR ;
                 DUP 5 ;
                 GET 8 ;
                 GET 4 ;
                 DUP 6 ;
                 GET 3 ;
                 PAIR 3 ;
                 SOME ;
                 DIG 4 ;
                 GET 5 ;
                 DIG 4 ;
                 PAIR ;
                 UPDATE ;
                 UPDATE 3 ;
                 NIL operation ;
                 PAIR } } } }

